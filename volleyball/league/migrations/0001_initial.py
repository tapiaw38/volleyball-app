# Generated by Django 3.2 on 2022-02-20 17:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='league/')),
                ('is_active', models.BooleanField(default=True, verbose_name='active_league')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('document', models.CharField(blank=True, max_length=8, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='You must enter a DNI number without points.', regex='\\d{8,8}$')])),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='You must enter a number with the following format: 3837430000. Up to 10 digits.', regex='\\d{10,10}$')])),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active_Person')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('is_active', models.BooleanField(default=True, verbose_name='active_player')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person', to='league.person')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='team/')),
                ('is_active', models.BooleanField(default=True, verbose_name='active_team')),
                ('players', models.ManyToManyField(related_name='players', through='league.Player', to='league.Person')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamLeague',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('points', models.IntegerField(default=0)),
                ('matches_played', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True, verbose_name='active_team_league')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_team', to='league.league')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_league', to='league.team')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team', to='league.team'),
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('sub_title', models.CharField(max_length=255, verbose_name='sub_title')),
                ('content', models.TextField(verbose_name='content')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='league/new/', verbose_name='picture')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_new', to='league.league')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active_match')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='league.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='league.team')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league', to='league.league')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='league',
            name='teams',
            field=models.ManyToManyField(related_name='teams', through='league.TeamLeague', to='league.Team'),
        ),
    ]
